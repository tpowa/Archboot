#!/usr/bin/env bash
# SPDX-License-Identifier: GPL-3.0-or-later
# Created by Tobias Powalowski <tpowa@archlinux.org>

_coreutils=(
\[
arch
base32
base64
basename
basenc
cat
chgrp
chmod
chown
chroot
cksum
comm
cp
csplit
cut
date
dd
df
dir
dircolors
dirname
du
echo
env
expand
expr
factor
false
fmt
fold
groups
hashsum
head
hostid
hostname
id
install
join
kill
link
ln
logname
ls
mkdir
mkfifo
mknod
mktemp
more
mv
nice
nl
nohup
nproc
numfmt
od
paste
pathchk
pinky
pr
printenv
printf
ptx
pwd
readlink
realpath
rm
rmdir
seq
shred
shuf
sleep
sort
split
stat
stdbuf
sum
sync
tac
tail
tee
test
timeout
touch
tr
true
truncate
tsort
tty
uname
unexpand
uniq
unlink
uptime
users
vdir
wc
who
whoami
yes
)

_run ()
{
    # add basic apps
    _map _binary 3cpio bash blkid dialog find grep \
                 gzip halt head init journalctl kmod loadkeys logger ls{blk,mod} \
                 mkfs.btrfs modprobe less mount mountpoint poweroff \
                 reboot rg setfont sh shutdown sulogin systemctl \
                 systemd-tmpfiles udevadm umount zstd
    # rust coreutils
    _binary uu-coreutils
    for i in ${_coreutils[@]}; do
        _symlink "/usr/bin/${i}" /usr/bin/uu-coreutils
    done
    # rdinit= kernel parameter defaults to /init
    # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/init/main.c
    _symlink /init bin/init
    # add not hardlinked libkmod for udev >=256, else modules are not loaded!
    _map _file /usr/lib/libkmod.so{,.2}
    ### adding needed files from running system
    _map _file /etc/{bash.bash_logout,bash.bashrc,profile,shells}
    # add kmod related config file(s)
    _file /usr/lib/depmod.d/search.conf
    for i in dialogrc hostname modprobe.d/modprobe.conf os-release; do
        _file_rename "/usr/share/archboot/base/etc/${i}" "/etc/${i}"
    done
    # add bash configuration, use color bash prompt, use color grep and ls output
    _file_rename /usr/share/archboot/base/etc/profile.d/custom-bash-options.sh \
                 /etc/profile.d/custom-bash-options.sh
    # add default bash setup
    for i in .bashrc .bash_profile .bash_logout; do
        _file_rename  "/etc/skel/${i}" "/root/${i}"
    done
    # add custom bash options
    echo ". /etc/profile.d/custom-bash-options.sh" >> "${_ROOTFS}/root/.bashrc"
    # add root user with empty password
    echo "root::0:root" > "${_ROOTFS}/etc/group"
    echo "root::0:0:Super User:/root:/bin/bash" > "${_ROOTFS}/etc/passwd"
    # create a shadow file and use 1 to keep ssh happy :)
    echo "root::1::::::" > "${_ROOTFS}/etc/shadow"
    # use: systemctl status for everything
    # use: systemctl list-dependencies for tree
    # disable systemd mounts:
    for i in dev-mqueue dev-hugepages sys-kernel-debug sys-kernel-tracing \
            sys-fs-fuse-connections tmp; do
        _symlink "/etc/systemd/system/${i}.mount" /dev/null
    done
    # disable systemd targets:
    for i in cryptsetup first-boot-complete integritysetup swap slices veritysetup; do
        _symlink "/etc/systemd/system/${i}.target" /dev/null
    done
    # disable systemd services:
    for i in ldconfig systemd-{binfmt,boot-random-seed\
,firstboot,hwdb-update,journal{-flush,-catalog-update},machine-id-commit,modules-load,pcrmachine\
,pcrphase{,-initrd,-sysinit},repart}; do
        _symlink "/etc/systemd/system/${i}.service" /dev/null
    done
    # disable systemd mounts
    for i in sys-kernel-debug sys-kernel-tracing; do
         _symlink "/etc/systemd/system/sysinit.target.wants/${i}.mount" /dev/null
    done
    # disable systemd automount:
    _symlink /etc/systemd/system/proc-sys-fs-binfmt_misc.automount /dev/null
    # vconsole terminus font
    _map _file /usr/share/{kbd/consolefonts/ter-v{16,32}n.psf.gz,terminfo/l/linux}
}

