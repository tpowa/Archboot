# basic setup
search --no-floppy --set=root --file /boot/grub/archboot-background.png
if [ ${grub_platform} == efi ]; then
    insmod all_video
    insmod efi_gop
    if ! [ ${grub_cpu} == arm64 ]; then
        insmod bli
        insmod efi_uga
    fi
elif [ ${grub_platform} == pc ]; then
    insmod vbe
    insmod vga
fi
insmod video_bochs
insmod video_cirrus
insmod font
insmod serial
serial --unit=0 --speed=115200
# framebuffer setup
if loadfont ter-u16n; then
    insmod png
    insmod gfxterm
    set gfxmode="auto"
    set gfxpayload="keep"
    terminal_input console serial
    terminal_output gfxterm serial
    background_image /boot/grub/archboot-background.png
fi

# menu functions
function _menu_running {
    echo "Running menu entry:"
    echo "${chosen} ..."
    echo "Please wait ..."
    }

# menu parameters
set timeout="10"
_title="Archboot - Arch Linux"
_common_options="console=tty0 loglevel=4 audit=0 systemd.show_status=false"
# kexec on aarch64 only allowed with nr_cpus=1!
_aarch64_options="nr_cpus=1"
_serial_console="console=ttyS0,115200"
_serial_console_aarch64="console=ttyAMA0,115200"
# mix mode boot is broken with NX protection enabled in qemu!
# https://lists.gnu.org/archive/html/grub-devel/2025-09/msg00049.html
_i386_options="_IA32_UEFI=1 noexec=off"
_arch="x86_64"
if [ ${grub_platform} == efi ]; then
    _boot="Launch UEFI"
    if [ ${grub_cpu} == i386 ]; then
        _boot="${_boot} MIXED MODE"
        _options="${_i386_options} ${_serial_console} ${_common_options}"
        _ext="ia32.efi"
    fi
    if [ ${grub_cpu} == x86_64 ]; then
        _options="${_serial_console} ${_common_options}"
        _ext="x64.efi"
    fi
    if [ ${grub_cpu} == arm64 ]; then
        _options="${_aarch64_options} ${_serial_console_aarch64} ${_common_options}"
        _arch="aarch64"
        _ext="aa64.efi"
    fi
elif [ ${grub_platform} == pc ]; then
    _boot="Launch BIOS"
    _options="${_x86_64_options} ${_common_options}"
fi
if [ ${grub_cpu} == arm64 ]; then
    _linux="linux /boot/Image-aarch64.gz"
    _initrd="initrd /boot/amd-ucode.img"
else
    _linux="linux /boot/vmlinuz-x86_64"
    _initrd="initrd /boot/intel-ucode.img /boot/amd-ucode.img"
fi

# menu
set default="${_boot} ${_title} ${_arch}"
menuentry "${_boot} ${_title} ${_arch}" "${_linux}"\
          "${_options}" "${_initrd} /boot/init-${_arch}.img" {
    _menu_running
    ${2} ${3}
    ${4}
}
if [ ${grub_platform} == efi ]; then
    menuentry "${_boot} IPXE ${_title} ${_arch}" "${_ext}" {
        _menu_running
        chainloader /efi/boot/ipxe${2}
    }
    menuentry "${_boot} Firmware Setup" {
        _menu_running
        fwsetup
    }
    if ! [ ${grub_cpu} == arm64 ]; then
        menuentry "${_boot} Shell" "${_ext}" {
            _menu_running
            chainloader /efi/tools/shell${2}
        }
    fi
    if [ ${grub_cpu} == x86_64 ]; then
        menuentry "${_boot} MEMTEST86+" {
            _menu_running
            linux /efi/tools/memtest.efi
        }
    fi
fi
if [ ${grub_platform} == pc ]; then
    menuentry "${_boot} IPXE ${_title} ${_arch}" {
        _menu_running
        linux16 /boot/ipxe.lkrn
    }
    menuentry "${_boot} MEMTEST86+" {
        _menu_running
        linux16 /boot/memtest.bin
    }
fi

menuentry "Reboot System" {
    _menu_running
    reboot
}

menuentry "Poweroff System" {
    _menu_running
    halt
}

menuentry "Exit Bootloader" {
    _menu_running
    exit
}
